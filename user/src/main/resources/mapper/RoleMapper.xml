<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.user.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.ex.user.entity.Role">
    <id column="ROLEID" jdbcType="VARCHAR" property="roleid" />
    <result column="ROLENAME" jdbcType="VARCHAR" property="rolename" />
    <result column="ROLEINDEX" jdbcType="INTEGER" property="roleindex" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
    <result column="CREATEDEPID" jdbcType="VARCHAR" property="createdepid" />
    <result column="CREATEUSERID" jdbcType="VARCHAR" property="createuserid" />
    <result column="UPDATETIME" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="UPDATEDEPID" jdbcType="VARCHAR" property="updatedepid" />
    <result column="UPDATEUSERID" jdbcType="VARCHAR" property="updateuserid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ROLEID, ROLENAME, ROLEINDEX, CREATETIME, CREATEDEPID, CREATEUSERID, UPDATETIME, UPDATEDEPID, 
    UPDATEUSERID
  </sql>
  <select id="selectByExample" parameterType="com.ex.user.entity.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ROLE
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ROLE
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ex.user.entity.RoleExample">
    delete from ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ex.user.entity.Role">
    insert into ROLE (ROLEID, ROLENAME, ROLEINDEX, 
      CREATETIME, CREATEDEPID, CREATEUSERID, 
      UPDATETIME, UPDATEDEPID, UPDATEUSERID
      )
    values (#{roleid,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{roleindex,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{createdepid,jdbcType=VARCHAR}, #{createuserid,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{updatedepid,jdbcType=VARCHAR}, #{updateuserid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ex.user.entity.Role">
    insert into ROLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        ROLEID,
      </if>
      <if test="rolename != null">
        ROLENAME,
      </if>
      <if test="roleindex != null">
        ROLEINDEX,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
      <if test="createdepid != null">
        CREATEDEPID,
      </if>
      <if test="createuserid != null">
        CREATEUSERID,
      </if>
      <if test="updatetime != null">
        UPDATETIME,
      </if>
      <if test="updatedepid != null">
        UPDATEDEPID,
      </if>
      <if test="updateuserid != null">
        UPDATEUSERID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roleindex != null">
        #{roleindex,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdepid != null">
        #{createdepid,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null">
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedepid != null">
        #{updatedepid,jdbcType=VARCHAR},
      </if>
      <if test="updateuserid != null">
        #{updateuserid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ex.user.entity.RoleExample" resultType="java.lang.Long">
    select count(*) from ROLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ROLE
    <set>
      <if test="record.roleid != null">
        ROLEID = #{record.roleid,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null">
        ROLENAME = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.roleindex != null">
        ROLEINDEX = #{record.roleindex,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdepid != null">
        CREATEDEPID = #{record.createdepid,jdbcType=VARCHAR},
      </if>
      <if test="record.createuserid != null">
        CREATEUSERID = #{record.createuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null">
        UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedepid != null">
        UPDATEDEPID = #{record.updatedepid,jdbcType=VARCHAR},
      </if>
      <if test="record.updateuserid != null">
        UPDATEUSERID = #{record.updateuserid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ROLE
    set ROLEID = #{record.roleid,jdbcType=VARCHAR},
      ROLENAME = #{record.rolename,jdbcType=VARCHAR},
      ROLEINDEX = #{record.roleindex,jdbcType=INTEGER},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      CREATEDEPID = #{record.createdepid,jdbcType=VARCHAR},
      CREATEUSERID = #{record.createuserid,jdbcType=VARCHAR},
      UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      UPDATEDEPID = #{record.updatedepid,jdbcType=VARCHAR},
      UPDATEUSERID = #{record.updateuserid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ex.user.entity.Role">
    update ROLE
    <set>
      <if test="rolename != null">
        ROLENAME = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roleindex != null">
        ROLEINDEX = #{roleindex,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdepid != null">
        CREATEDEPID = #{createdepid,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null">
        CREATEUSERID = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedepid != null">
        UPDATEDEPID = #{updatedepid,jdbcType=VARCHAR},
      </if>
      <if test="updateuserid != null">
        UPDATEUSERID = #{updateuserid,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ex.user.entity.Role">
    update ROLE
    set ROLENAME = #{rolename,jdbcType=VARCHAR},
      ROLEINDEX = #{roleindex,jdbcType=INTEGER},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      CREATEDEPID = #{createdepid,jdbcType=VARCHAR},
      CREATEUSERID = #{createuserid,jdbcType=VARCHAR},
      UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      UPDATEDEPID = #{updatedepid,jdbcType=VARCHAR},
      UPDATEUSERID = #{updateuserid,jdbcType=VARCHAR}
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </update>
</mapper>